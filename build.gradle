buildscript {
	ext {
		springBootVersion = '3.2.2.RELEASE'
	}
	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:3.2.1")
	}
}


plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.2'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'jacoco'
	id 'maven-publish'
}

group = 'guru.springframework'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.webjars:bootstrap:4.4.1'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	implementation 'org.springframework.boot:spring-boot-starter-validation'
//	implementation 'org.springframework.boot:spring-boot-gradle-plugin:3.1.2'
	runtimeOnly'org.springframework.boot:spring-boot-devtools'
//	testImplementation 'junit:junit:4.13.1'
//	implementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo'
//	implementation group: 'cz.jirutka.spring', name: 'embedmongo-spring', version: '1.3.1'
	implementation 'org.hibernate.validator:hibernate-validator:6.2.0.Final'
	implementation 'mysql:mysql-connector-java:8.0.28'
	implementation 'jakarta.validation:jakarta.validation-api:2.0.2'
	implementation 'javax.servlet:javax.servlet-api:4.0.0'
	implementation 'org.slf4j:slf4j-api:2.0.1'
	compileOnly 'org.projectlombok:lombok'

}

//test {
//	finalizedBy jacocoTestReport
//}
//
//jacocoTestReport {
//	dependsOn test
//}

//jacoco {
//	toolVersion = "0.8.11"
////	reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
//}

//export test coverage
jacocoTestReport {
	reports {
		xml.required = true   // There is a problem right here
		csv.required = false
		html.required = false
	}
}





